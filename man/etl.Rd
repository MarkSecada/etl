% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/etl.R
\name{etl}
\alias{etl}
\alias{etl.default}
\title{Initialize an etl object}
\usage{
etl(x, db_con, dir = tempdir(), ...)

\method{etl}{default}(x, db_con, dir = tempdir(), ...)
}
\arguments{
\item{x}{the name of the package that you wish to populate.
This determines the class of the \code{\link{etl}} object, which
determines method dispatch of \code{etl_*()} functions.}

\item{db_con}{a \code{\link[dplyr]{src}} or
\code{\link[DBI]{DBIConnection-class}} object}

\item{dir}{a directory to store the raw data files}

\item{...}{arguments passed to methods}
}
\value{
an object of class \code{etl_x} and \code{\link{etl}}
}
\description{
Initialize an etl object
}
\details{
An \code{\link{etl}} object is a list with the following
items:
\describe{
 \item{pkg}{the name of the package corresponding to the data source}
 \item{con}{an objection of class \code{\link[DBI]{DBIConnection-class}}}
 \item{dir}{the directory where the raw data is stored}
 \item{init}{has the database been initialized?}
 \item{push}{a vector a messages from \code{\link[DBI]{dbWriteTable}}}
 \item{files}{a list of files that have been downloaded}
 }
}
\examples{
\dontrun{

# connect using dplyr
if (require(RPostgreSQL) & require(dplyr)) {
  db <- src_postgres("mtcars", user = "postgres",
  host = "localhost")
  cars <- etl("mtcars", db)
  str(cars)
}
# connect using DBI
require(DBI)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user = "postgres",
host = "localhost", dbname = "mtcars")
cars <- etl("mtcars", db)
str(cars)
}
}
\seealso{
\code{\link{etl_create}}
}

