% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/etl_cleanup.R, R/etl_create.R, R/etl_extract.R, R/etl_init.R, R/etl_load.R, R/etl_transform.R, R/etl_update.R
\name{etl_cleanup}
\alias{etl_cleanup}
\alias{etl_cleanup.default}
\alias{etl_cleanup.etl_mtcars}
\alias{etl_create}
\alias{etl_create.default}
\alias{etl_extract}
\alias{etl_extract.default}
\alias{etl_extract.etl_mtcars}
\alias{etl_init}
\alias{etl_init.default}
\alias{etl_init.etl_mtcars}
\alias{etl_load}
\alias{etl_load.default}
\alias{etl_load.etl_mtcars}
\alias{etl_transform}
\alias{etl_transform.default}
\alias{etl_transform.etl_mtcars}
\alias{etl_update}
\alias{etl_update.default}
\title{ETL functions for working with medium sized data}
\usage{
etl_cleanup(obj, ...)

\method{etl_cleanup}{default}(obj, ...)

\method{etl_cleanup}{etl_mtcars}(obj, ...)

etl_create(obj, ...)

\method{etl_create}{default}(obj, ...)

etl_extract(obj, ...)

\method{etl_extract}{default}(obj, ...)

\method{etl_extract}{etl_mtcars}(obj, ...)

etl_init(obj, ...)

\method{etl_init}{default}(obj, ...)

\method{etl_init}{etl_mtcars}(obj, ...)

etl_load(obj, ...)

\method{etl_load}{default}(obj, ...)

\method{etl_load}{etl_mtcars}(obj, ...)

etl_transform(obj, ...)

\method{etl_transform}{default}(obj, ...)

\method{etl_transform}{etl_mtcars}(obj, ...)

etl_update(obj, ...)

\method{etl_update}{default}(obj, ...)
}
\arguments{
\item{obj}{an \code{\link{etl}} object}

\item{...}{arguments passed to methods}
}
\value{
Each one of these functions returns an \code{\link{etl}} object.
}
\description{
These generic functions provide a systematic approach
for performing ETL (exchange-transform-load) operations on medium
sized data.
}
\details{
The purpose of these functions are to download data from a
particular data source from the Internet, process it, and load it
into a SQL database server.

There are five primary functions:
\describe{
 \item{etl_init}{Initialize the database. For RDBMSs, an SQL initialization
 script is sent to the DB.}
 \item{etl_extract}{Download data from the Internet and store it locally in
 its raw form.}
 \item{etl_transform}{Maniuplate the raw data such that it can be loaded
 into a database table. Usually, this means converting the raw data to
 (a series of) CSV files, which are also stored locally.}
 \item{etl_load}{Load the transformed data into the database.}
 \item{etl_cleanup}{Perform housekeeping, such as deleting unnecessary
 raw data files.}
}

Additionally, two convenience function chain these operations together:
\describe{
 \item{etl_create}{Run all five in succession. This is useful when you want
 to create the database from scratch.}
 \item{etl_update}{Run all four, excepting \code{etl_init}. This is useful
 where the database already exists, but you want to insert some new data. }
}
}
\examples{
require(magrittr)
if (require(RSQLite) & require(dplyr)) {
 db <- src_sqlite(path = tempfile(), create = TRUE)
 cars <- etl("mtcars", db)
 cars \%>\%
   etl_init() \%>\%
   etl_extract() \%>\%
   etl_transform() \%>\%
   etl_load() \%>\%
   etl_cleanup()
 db \%>\%
   tbl(from = "mtcars") \%>\%
   group_by(cyl) \%>\%
   summarise(N = n(), meanMPG = mean(mpg))
}
require(magrittr)
\dontrun{
if (require(RPostgreSQL) & require(dplyr)) {
  db <- src_postgres("mtcars", user = "postgres", host = "localhost")
  cars <- etl("mtcars", db)
  cars \%<>\% etl_create()
 }
}
}
\seealso{
\code{\link{etl}}

etl
}

